{"version":3,"sources":["../../../../build/webpack/plugins/react-loadable-plugin.ts"],"names":["buildManifest","compiler","compilation","context","options","manifest","chunkGroups","forEach","chunkGroup","isInitial","origins","chunkGroupOrigin","request","chunks","chunk","files","file","match","publicPath","url","resolve","outputOptions","module","modulesIterable","id","name","libIdent","some","item","push","Object","keys","sort","reduce","a","c","ReactLoadablePlugin","constructor","opts","filename","apply","hooks","emit","tapAsync","callback","json","JSON","stringify","assets","source","size","length"],"mappings":"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","sourcesContent":["/**\nCOPYRIGHT (c) 2017-present James Kyle <me@thejameskyle.com>\n MIT License\n Permission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n The above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWAR\n*/\n// Implementation of this PR: https://github.com/jamiebuilds/react-loadable/pull/132\n// Modified to strip out unneeded results for Next's specific use case\n\nimport url from 'url'\n\nimport {\n  Compiler,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  compilation,\n} from 'webpack'\n\nfunction buildManifest(\n  compiler: Compiler,\n  compilation: compilation.Compilation\n) {\n  let context = compiler.options.context\n  let manifest: { [k: string]: any[] } = {}\n\n  compilation.chunkGroups.forEach((chunkGroup) => {\n    if (chunkGroup.isInitial()) {\n      return\n    }\n\n    chunkGroup.origins.forEach((chunkGroupOrigin: any) => {\n      const { request } = chunkGroupOrigin\n\n      chunkGroup.chunks.forEach((chunk: any) => {\n        chunk.files.forEach((file: string) => {\n          if (!file.match(/\\.js$/) || !file.match(/^static\\/chunks\\//)) {\n            return\n          }\n\n          let publicPath = url.resolve(\n            compilation.outputOptions.publicPath || '',\n            file\n          )\n\n          for (const module of chunk.modulesIterable) {\n            let id = module.id\n            let name =\n              typeof module.libIdent === 'function'\n                ? module.libIdent({ context })\n                : null\n\n            if (!manifest[request]) {\n              manifest[request] = []\n            }\n\n            // Avoid duplicate files\n            if (\n              manifest[request].some(\n                (item) => item.id === id && item.file === file\n              )\n            ) {\n              continue\n            }\n\n            manifest[request].push({\n              id,\n              name,\n              file,\n              publicPath,\n            })\n          }\n        })\n      })\n    })\n  })\n\n  manifest = Object.keys(manifest)\n    .sort()\n    // eslint-disable-next-line no-sequences\n    .reduce((a, c) => ((a[c] = manifest[c]), a), {} as any)\n\n  return manifest\n}\n\nexport class ReactLoadablePlugin {\n  private filename: string\n\n  constructor(opts: { filename: string }) {\n    this.filename = opts.filename\n  }\n\n  apply(compiler: Compiler) {\n    compiler.hooks.emit.tapAsync(\n      'ReactLoadableManifest',\n      (compilation, callback) => {\n        const manifest = buildManifest(compiler, compilation)\n        var json = JSON.stringify(manifest, null, 2)\n        compilation.assets[this.filename] = {\n          source() {\n            return json\n          },\n          size() {\n            return json.length\n          },\n        }\n        callback()\n      }\n    )\n  }\n}\n"]}