{"version":3,"sources":["../../../../build/webpack/plugins/next-drop-client-page-plugin.ts"],"names":["DropClientPage","ampPages","Set","apply","compiler","hooks","emit","tap","compilation","Object","keys","assets","forEach","assetKey","asset","_value","includes","cleanAssetKey","replace","page","split","pageNoExt","endsWith","add"],"mappings":"mEACA,0BAEA;AACO,KAAMA,CAAAA,cAAiC,oBAC5CC,QAD4C,CACjC,GAAIC,CAAAA,GAAJ,EADiC,EAG5CC,KAAK,CAACC,QAAD,CAAqB,CACxBA,QAAQ,CAACC,KAAT,CAAeC,IAAf,CAAoBC,GAApB,CAAwB,gBAAxB,CAA2CC,WAAD,EAAiB,CACzDC,MAAM,CAACC,IAAP,CAAYF,WAAW,CAACG,MAAxB,EAAgCC,OAAhC,CAAyCC,QAAD,EAAc,yCACpD,KAAMC,CAAAA,KAAK,CAAGN,WAAW,CAACG,MAAZ,CAAmBE,QAAnB,CAAd,CAEA,GAAIC,KAAJ,SAAIA,KAAJ,gCAAIA,KAAK,CAAEC,MAAX,+DAAI,cAAeC,QAAnB,gDAAI,yCAA0B,2BAA1B,CAAJ,CAA4D,CAC1D,KAAMC,CAAAA,aAAa,CAAGJ,QAAQ,CAACK,OAAT,CAAiB,KAAjB,CAAwB,GAAxB,CAAtB,CACA,KAAMC,CAAAA,IAAI,CAAG,IAAMF,aAAa,CAACG,KAAd,CAAoB,QAApB,EAA8B,CAA9B,CAAnB,CACA,KAAMC,CAAAA,SAAS,CAAGF,IAAI,CAACC,KAAL,CAAW,kBAAQD,IAAR,CAAX,EAA0B,CAA1B,CAAlB,CAEA,MAAOX,CAAAA,WAAW,CAACG,MAAZ,CAAmBE,QAAnB,CAAP,CAEA;AACA;AACA,GAAI,CAACQ,SAAS,CAACC,QAAV,CAAmB,SAAnB,CAAL,CAAoC,CAClC,KAAKrB,QAAL,CAAcsB,GAAd,CAAkBF,SAAS,CAACH,OAAV,CAAkB,UAAlB,CAA8B,EAA9B,GAAqC,GAAvD,EACD,CACF,CACF,CAhBD,EAiBD,CAlBD,EAmBD,CAvB2C,C","sourcesContent":["import { Compiler, Plugin } from 'webpack'\nimport { extname } from 'path'\n\n// Prevents outputting client pages when they are not needed\nexport class DropClientPage implements Plugin {\n  ampPages = new Set()\n\n  apply(compiler: Compiler) {\n    compiler.hooks.emit.tap('DropClientPage', (compilation) => {\n      Object.keys(compilation.assets).forEach((assetKey) => {\n        const asset = compilation.assets[assetKey]\n\n        if (asset?._value?.includes?.('__NEXT_DROP_CLIENT_FILE__')) {\n          const cleanAssetKey = assetKey.replace(/\\\\/g, '/')\n          const page = '/' + cleanAssetKey.split('pages/')[1]\n          const pageNoExt = page.split(extname(page))[0]\n\n          delete compilation.assets[assetKey]\n\n          // Detect being re-ran through a child compiler and don't re-mark the\n          // page as AMP\n          if (!pageNoExt.endsWith('.module')) {\n            this.ampPages.add(pageNoExt.replace(/\\/index$/, '') || '/')\n          }\n        }\n      })\n    })\n  }\n}\n"]}