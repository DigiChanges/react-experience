{"version":3,"sources":["../../../../../../../build/webpack/config/blocks/css/loaders/client.ts"],"names":["getClientStyleLoader","isDevelopment","assetPrefix","loader","require","resolve","options","insert","element","anchorElement","document","querySelector","parentNode","insertBefore","self","requestAnimationFrame","setTimeout","x","querySelectorAll","i","length","removeChild","MiniCssExtractPlugin","publicPath"],"mappings":"uFACA,yG,mFAEO,QAASA,CAAAA,oBAAT,CAA8B,CACnCC,aADmC,CAEnCC,WAFmC,CAA9B,CAMoB,CACzB,MAAOD,CAAAA,aAAa,CAChB,CACEE,MAAM,CAAEC,OAAO,CAACC,OAAR,CAAgB,cAAhB,CADV,CAEEC,OAAO,CAAE,CACP;AACA;AACA;AACA;AACA;AACAC,MAAM,CAAE,SAAUC,OAAV,CAAyB,CAC/B;AACA;AACA,GAAIC,CAAAA,aAAa,CAAGC,QAAQ,CAACC,aAAT,CAClB,2BADkB,CAApB,CAGA,GAAIC,CAAAA,UAAU,CAAGH,aAAa,CAACG,UAA/B,CAA2C;AAE3C;AACA;AACA;AACAA,UAAU,CAACC,YAAX,CAAwBL,OAAxB,CAAiCC,aAAjC,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA,CAUC,CAACK,IAAI,CAACC,qBAAL,EAA8BC,UAA/B,EAA2C,UAAY,CACtD,IACE,GAAIC,CAAAA,CAAC,CAAGP,QAAQ,CAACQ,gBAAT,CAA0B,uBAA1B,CAAR,CACEC,CAAC,CAAGF,CAAC,CAACG,MAFV,CAGED,CAAC,EAHH,EAKE,CACAF,CAAC,CAACE,CAAD,CAAD,CAAKP,UAAL,CAAiBS,WAAjB,CAA6BJ,CAAC,CAACE,CAAD,CAA9B,EACD,CACF,CATA,EAUF,CArCM,CAFX,CADgB,CA2ChB,CACEhB,MAAM,CAAEmB,8BAAqBnB,MAD/B,CAEEG,OAAO,CAAE,CAAEiB,UAAU,CAAG,GAAErB,WAAY,SAA7B,CAFX,CA3CJ,CA+CD","sourcesContent":["import webpack from 'webpack'\nimport MiniCssExtractPlugin from '../../../../plugins/mini-css-extract-plugin'\n\nexport function getClientStyleLoader({\n  isDevelopment,\n  assetPrefix,\n}: {\n  isDevelopment: boolean\n  assetPrefix: string\n}): webpack.RuleSetUseItem {\n  return isDevelopment\n    ? {\n        loader: require.resolve('style-loader'),\n        options: {\n          // By default, style-loader injects CSS into the bottom\n          // of <head>. This causes ordering problems between dev\n          // and prod. To fix this, we render a <noscript> tag as\n          // an anchor for the styles to be placed before. These\n          // styles will be applied _before_ <style jsx global>.\n          insert: function (element: Node) {\n            // These elements should always exist. If they do not,\n            // this code should fail.\n            var anchorElement = document.querySelector(\n              '#__next_css__DO_NOT_USE__'\n            )!\n            var parentNode = anchorElement.parentNode! // Normally <head>\n\n            // Each style tag should be placed right before our\n            // anchor. By inserting before and not after, we do not\n            // need to track the last inserted element.\n            parentNode.insertBefore(element, anchorElement)\n\n            // Remember: this is development only code.\n            //\n            // After styles are injected, we need to remove the\n            // <style> tags that set `body { display: none; }`.\n            //\n            // We use `requestAnimationFrame` as a way to defer\n            // this operation since there may be multiple style\n            // tags.\n            ;(self.requestAnimationFrame || setTimeout)(function () {\n              for (\n                var x = document.querySelectorAll('[data-next-hide-fouc]'),\n                  i = x.length;\n                i--;\n\n              ) {\n                x[i].parentNode!.removeChild(x[i])\n              }\n            })\n          },\n        },\n      }\n    : {\n        loader: MiniCssExtractPlugin.loader,\n        options: { publicPath: `${assetPrefix}/_next/` },\n      }\n}\n"]}