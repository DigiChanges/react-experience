{"version":3,"sources":["../../../../../build/webpack/config/blocks/base.ts"],"names":["base","ctx","config","mode","isDevelopment","name","isServer","target","process","platform","devtool","productionBrowserSourceMaps","module","rules","strictExportPresence"],"mappings":"yDAAA,+E,mFAIO,KAAMA,CAAAA,IAAI,CAAG,oBAAM,QAASA,CAAAA,IAAT,CACxBC,GADwB,CAExBC,MAFwB,CAGxB,CACAA,MAAM,CAACC,IAAP,CAAcF,GAAG,CAACG,aAAJ,CAAoB,aAApB,CAAoC,YAAlD,CACAF,MAAM,CAACG,IAAP,CAAcJ,GAAG,CAACK,QAAJ,CAAe,QAAf,CAA0B,QAAxC,CACAJ,MAAM,CAACK,MAAP,CAAgBN,GAAG,CAACK,QAAJ,CAAe,MAAf,CAAwB,KAAxC,CAEA;AACA,GAAIL,GAAG,CAACG,aAAR,CAAuB,CACrB,GAAII,OAAO,CAACC,QAAR,GAAqB,OAAzB,CAAkC,CAChC;AACA;AACA;AACAP,MAAM,CAACQ,OAAP,CAAiB,mBAAjB,CACD,CALD,IAKO,CACL;AACA;AACA;AACA;AACAR,MAAM,CAACQ,OAAP,CAAiB,iBAAjB,CACD,CACF,CAbD,IAaO,CACL;AACA,GAAIT,GAAG,CAACU,2BAAR,CAAqC,CACnCT,MAAM,CAACQ,OAAP,CAAiB,YAAjB,CACD,CAFD,IAEO,CACLR,MAAM,CAACQ,OAAP,CAAiB,KAAjB,CACD,CACF,CAED,GAAI,CAACR,MAAM,CAACU,MAAZ,CAAoB,CAClBV,MAAM,CAACU,MAAP,CAAgB,CAAEC,KAAK,CAAE,EAAT,CAAhB,CACD,CACDX,MAAM,CAACU,MAAP,CAAcE,oBAAd,CAAqC,IAArC,CAEA,MAAOZ,CAAAA,MAAP,CACD,CArCmB,CAAb,C","sourcesContent":["import curry from 'next/dist/compiled/lodash.curry'\nimport { Configuration } from 'webpack'\nimport { ConfigurationContext } from '../utils'\n\nexport const base = curry(function base(\n  ctx: ConfigurationContext,\n  config: Configuration\n) {\n  config.mode = ctx.isDevelopment ? 'development' : 'production'\n  config.name = ctx.isServer ? 'server' : 'client'\n  config.target = ctx.isServer ? 'node' : 'web'\n\n  // https://webpack.js.org/configuration/devtool/#development\n  if (ctx.isDevelopment) {\n    if (process.platform === 'win32') {\n      // Non-eval based source maps are slow to rebuild, so we only enable\n      // them for Windows. Unfortunately, eval source maps are flagged as\n      // suspicious by Windows Defender and block HMR.\n      config.devtool = 'inline-source-map'\n    } else {\n      // `eval-source-map` provides full-fidelity source maps for the\n      // original source, including columns and original variable names.\n      // This is desirable so the in-browser debugger can correctly pause\n      // and show scoped variables with their original names.\n      config.devtool = 'eval-source-map'\n    }\n  } else {\n    // Enable browser sourcemaps\n    if (ctx.productionBrowserSourceMaps) {\n      config.devtool = 'source-map'\n    } else {\n      config.devtool = false\n    }\n  }\n\n  if (!config.module) {\n    config.module = { rules: [] }\n  }\n  config.module.strictExportPresence = true\n\n  return config\n})\n"]}