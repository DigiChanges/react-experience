{"version":3,"sources":["../../../../build/webpack/config/helpers.ts"],"names":["loader","rule","config","module","rules","oneOf","existing","find","push","unshiftLoader","unshift","plugin","p","plugins"],"mappings":"gGAAA,+E,mFAGO,KAAMA,CAAAA,MAAM,CAAG,oBAAM,QAASA,CAAAA,MAAT,CAC1BC,IAD0B,CAE1BC,MAF0B,CAG1B,CACA,GAAI,CAACA,MAAM,CAACC,MAAZ,CAAoB,CAClBD,MAAM,CAACC,MAAP,CAAgB,CAAEC,KAAK,CAAE,EAAT,CAAhB,CACD,CAED,GAAIH,IAAI,CAACI,KAAT,CAAgB,CACd,KAAMC,CAAAA,QAAQ,CAAGJ,MAAM,CAACC,MAAP,CAAcC,KAAd,CAAoBG,IAApB,CAA0BN,IAAD,EAAUA,IAAI,CAACI,KAAxC,CAAjB,CACA,GAAIC,QAAJ,CAAc,CACZA,QAAQ,CAACD,KAAT,CAAgBG,IAAhB,CAAqB,GAAGP,IAAI,CAACI,KAA7B,EACA,MAAOH,CAAAA,MAAP,CACD,CACF,CAEDA,MAAM,CAACC,MAAP,CAAcC,KAAd,CAAoBI,IAApB,CAAyBP,IAAzB,EACA,MAAOC,CAAAA,MAAP,CACD,CAlBqB,CAAf,C,sBAoBA,KAAMO,CAAAA,aAAa,CAAG,oBAAM,QAAST,CAAAA,MAAT,CACjCC,IADiC,CAEjCC,MAFiC,CAGjC,CACA,GAAI,CAACA,MAAM,CAACC,MAAZ,CAAoB,CAClBD,MAAM,CAACC,MAAP,CAAgB,CAAEC,KAAK,CAAE,EAAT,CAAhB,CACD,CAED,GAAIH,IAAI,CAACI,KAAT,CAAgB,CACd,KAAMC,CAAAA,QAAQ,CAAGJ,MAAM,CAACC,MAAP,CAAcC,KAAd,CAAoBG,IAApB,CAA0BN,IAAD,EAAUA,IAAI,CAACI,KAAxC,CAAjB,CACA,GAAIC,QAAJ,CAAc,CACZA,QAAQ,CAACD,KAAT,CAAgBK,OAAhB,CAAwB,GAAGT,IAAI,CAACI,KAAhC,EACA,MAAOH,CAAAA,MAAP,CACD,CACF,CAEDA,MAAM,CAACC,MAAP,CAAcC,KAAd,CAAoBM,OAApB,CAA4BT,IAA5B,EACA,MAAOC,CAAAA,MAAP,CACD,CAlB4B,CAAtB,C,oCAoBA,KAAMS,CAAAA,MAAM,CAAG,oBAAM,QAASA,CAAAA,MAAT,CAAgBC,CAAhB,CAA2BV,MAA3B,CAAkD,CAC5E,GAAI,CAACA,MAAM,CAACW,OAAZ,CAAqB,CACnBX,MAAM,CAACW,OAAP,CAAiB,EAAjB,CACD,CACDX,MAAM,CAACW,OAAP,CAAeL,IAAf,CAAoBI,CAApB,EACA,MAAOV,CAAAA,MAAP,CACD,CANqB,CAAf,C","sourcesContent":["import curry from 'next/dist/compiled/lodash.curry'\nimport { Configuration, Plugin, RuleSetRule } from 'webpack'\n\nexport const loader = curry(function loader(\n  rule: RuleSetRule,\n  config: Configuration\n) {\n  if (!config.module) {\n    config.module = { rules: [] }\n  }\n\n  if (rule.oneOf) {\n    const existing = config.module.rules.find((rule) => rule.oneOf)\n    if (existing) {\n      existing.oneOf!.push(...rule.oneOf)\n      return config\n    }\n  }\n\n  config.module.rules.push(rule)\n  return config\n})\n\nexport const unshiftLoader = curry(function loader(\n  rule: RuleSetRule,\n  config: Configuration\n) {\n  if (!config.module) {\n    config.module = { rules: [] }\n  }\n\n  if (rule.oneOf) {\n    const existing = config.module.rules.find((rule) => rule.oneOf)\n    if (existing) {\n      existing.oneOf!.unshift(...rule.oneOf)\n      return config\n    }\n  }\n\n  config.module.rules.unshift(rule)\n  return config\n})\n\nexport const plugin = curry(function plugin(p: Plugin, config: Configuration) {\n  if (!config.plugins) {\n    config.plugins = []\n  }\n  config.plugins.push(p)\n  return config\n})\n"]}