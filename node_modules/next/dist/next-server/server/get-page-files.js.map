{"version":3,"sources":["../../../next-server/server/get-page-files.ts"],"names":["getPageFiles","buildManifest","page","normalizedPage","files","pages","replace","console","warn"],"mappings":"uEAAA,wDAWO,QAASA,CAAAA,YAAT,CACLC,aADK,CAELC,IAFK,CAGK,CACV,KAAMC,CAAAA,cAAc,CAAG,yCAAkBD,IAAlB,CAAvB,CACA,GAAIE,CAAAA,KAAK,CAAGH,aAAa,CAACI,KAAd,CAAoBF,cAApB,CAAZ,CAEA,GAAI,CAACC,KAAL,CAAY,CACVA,KAAK,CAAGH,aAAa,CAACI,KAAd,CAAoBF,cAAc,CAACG,OAAf,CAAuB,UAAvB,CAAmC,EAAnC,GAA0C,GAA9D,CAAR,CACD,CAED,GAAI,CAACF,KAAL,CAAY,CACV;AACAG,OAAO,CAACC,IAAR,CACG,4BAA2BL,cAAe,+BAD7C,EAGA,MAAO,EAAP,CACD,CAED,MAAOC,CAAAA,KAAP,CACD","sourcesContent":["import { normalizePagePath } from './normalize-page-path'\n\nexport type BuildManifest = {\n  devFiles: string[]\n  lowPriorityFiles: string[]\n  pages: {\n    '/_app': string[]\n    [page: string]: string[]\n  }\n}\n\nexport function getPageFiles(\n  buildManifest: BuildManifest,\n  page: string\n): string[] {\n  const normalizedPage = normalizePagePath(page)\n  let files = buildManifest.pages[normalizedPage]\n\n  if (!files) {\n    files = buildManifest.pages[normalizedPage.replace(/\\/index$/, '') || '/']\n  }\n\n  if (!files) {\n    // tslint:disable-next-line\n    console.warn(\n      `Could not find files for ${normalizedPage} in .next/build-manifest.json`\n    )\n    return []\n  }\n\n  return files\n}\n"]}