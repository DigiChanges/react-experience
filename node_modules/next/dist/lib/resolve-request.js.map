{"version":3,"sources":["../../lib/resolve-request.ts"],"names":["resolveRequest","req","issuer","process","versions","pnp","require","considerBuiltins","basedir","endsWith","path","posix","sep","win32","dirname","resolve","sync"],"mappings":"2EAAA,kFACA,kD,mFAEO,QAASA,CAAAA,cAAT,CAAwBC,GAAxB,CAAqCC,MAArC,CAAqD,CAC1D;AACA;AACA;AACA,GAAIC,OAAO,CAACC,QAAR,CAAiBC,GAArB,CAA0B,CACxB,KAAM,CAAEL,cAAF,EAAqBM,OAAO,CAAE,QAAF,CAAlC,CACA,MAAON,CAAAA,cAAc,CAACC,GAAD,CAAMC,MAAN,CAAc,CAAEK,gBAAgB,CAAE,KAApB,CAAd,CAArB,CACD,CAHD,IAGO,CACL,KAAMC,CAAAA,OAAO,CACXN,MAAM,CAACO,QAAP,CAAgBC,cAAKC,KAAL,CAAWC,GAA3B,GAAmCV,MAAM,CAACO,QAAP,CAAgBC,cAAKG,KAAL,CAAWD,GAA3B,CAAnC,CACIV,MADJ,CAEIQ,cAAKI,OAAL,CAAaZ,MAAb,CAHN,CAIA,MAAOa,gBAAQC,IAAR,CAAaf,GAAb,CAAkB,CAAEO,OAAF,CAAlB,CAAP,CACD,CACF","sourcesContent":["import resolve from 'next/dist/compiled/resolve/index.js'\nimport path from 'path'\n\nexport function resolveRequest(req: string, issuer: string) {\n  // The `resolve` package is prebuilt through ncc, which prevents\n  // PnP from being able to inject itself into it. To circumvent\n  // this, we simply use PnP directly when available.\n  if (process.versions.pnp) {\n    const { resolveRequest } = require(`pnpapi`)\n    return resolveRequest(req, issuer, { considerBuiltins: false })\n  } else {\n    const basedir =\n      issuer.endsWith(path.posix.sep) || issuer.endsWith(path.win32.sep)\n        ? issuer\n        : path.dirname(issuer)\n    return resolve.sync(req, { basedir })\n  }\n}\n"]}